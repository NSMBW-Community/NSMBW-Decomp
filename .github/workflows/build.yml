name: Build and Publish

on: [push, pull_request]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  ci:
    runs-on: windows-2022
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Download and decrypt blob
        env:
          BLOB_PASSPHRASE: ${{ secrets.BLOB_PASSPHRASE }}
          BLOB_URL: 'https://rootcubed.dev/nsmbw/gh-actions-blob.zip.gpg'
        run: |
          $ProgressPreference = "SilentlyContinue"
          Invoke-WebRequest "$env:BLOB_URL" -OutFile .\gh-actions-blob.zip.gpg
          gpg --pinentry-mode loopback -d --cipher-algo AES256 --yes --passphrase "$env:BLOB_PASSPHRASE" -o .\gh-actions-blob.zip .\gh-actions-blob.zip.gpg

      - name: Extract blob data to the needed directories
        run: |
          Expand-Archive .\gh-actions-blob.zip
          Remove-Item -Recurse -Force compilers
          Remove-Item -Recurse -Force original
          Move-Item gh-actions-blob\compilers .
          Move-Item gh-actions-blob\original .

      - name: Build binaries
        run: python build.py

      - name: Run progress script
        run: python progress.py --verify-obj --verify-bin --progress-summary

      - name: Run DTK and objdiff to generate progress file for decomp.dev
        run: |
          pip install pyyaml
          python prepare_objdiff.py
          Invoke-WebRequest 'https://github.com/encounter/objdiff/releases/download/v2.1.0/objdiff-cli-windows-x86_64.exe' -OutFile objdiff-cli.exe
          ./objdiff-cli.exe report generate | Out-File -Append -Encoding UTF8 ./bin/report.json

      - name: Upload progress artifacts
        uses: actions/upload-artifact@v4
        with:
          name: SMNP01-report
          path: bin/report.json
          if-no-files-found: error


  generate_docs:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Generate documentation
        run: |
          sudo apt-get install -y graphviz fonts-freefont-ttf
          curl https://www.doxygen.nl/files/doxygen-1.12.0.linux.bin.tar.gz --output doxygen-1.12.0.linux.bin.tar.gz
          tar xzf doxygen-1.12.0.linux.bin.tar.gz
          cd doxygen-1.12.0
          sudo make install
          cd ..
          doxygen

      - name: Run progress script to create artifacts
        env:
          PROGRESS_URL: 'https://nsmbw-community.github.io/NSMBW-Decomp/progress.csv'
        run: |
          curl $PROGRESS_URL --output progress.csv
          python progress.py --progress-csv progress.csv
          python progress.py --create-badges

      - name: Copy website files
        run: |
          mkdir -p out/website/
          cp -v website/*.* out/website/
          cp -a -v doxygen/. out/website/docs
          cp progress.csv out/website/
          cp *.json out/website/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: out/website

  deploy:
    needs: generate_docs
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
